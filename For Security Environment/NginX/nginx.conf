
user nginx nginx;
worker_processes 2;

error_log /usr/local/webserver/nginx/logs/nginx_error.log crit;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid /usr/local/webserver/nginx/nginx.pid;
worker_rlimit_nofile 65535;

events {

	use epoll;
	worker_connections 65535;
}

http {

	include mime.types;
	default_type application/octet-stream;

	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
	'$status $body_bytes_sent "$http_referer" '
	'"$http_user_agent" "$http_x_forwarded_for"';

	server_names_hash_bucket_size 128;
	client_header_buffer_size 32k;
	large_client_header_buffers 4 32k;
	client_max_body_size 8m;
	sendfile on;
	tcp_nopush on;
	keepalive_timeout 60;
	tcp_nodelay on;
	fastcgi_connect_timeout 300;
	fastcgi_send_timeout 300;
	fastcgi_read_timeout 300;
	fastcgi_buffer_size 64k;
	fastcgi_buffers 4 64k;
	fastcgi_busy_buffers_size 128k;
	fastcgi_temp_file_write_size 128k;
	gzip on;
	gzip_min_length 1k;
	gzip_buffers 4 16k;
	gzip_http_version 1.0;
	gzip_comp_level 2;
	gzip_types text/plain application/x-javascript text/css application/xml;
	gzip_vary on;

	server {
    server_tokens off;
		#listen 80;
		ssl	     on;
		listen 443 ssl;
		ssl_certificate /usr/local/webserver/nginx/cert.crt;
		ssl_certificate_key /usr/local/webserver/nginx/cert.key;
		# create crt&key from .pfx: https://wiki.cac.washington.edu/display/infra/Extracting+Certificate+and+Private+Key+Files+from+a+.pfx+File
		# directly create crt&key: https://www.digitalocean.com/community/tutorials/how-to-configure-nginx-with-ssl-as-a-reverse-proxy-for-jenkins
		# directly create crt&key: cd /etc/nginx && sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/cert.key -out /etc/nginx/cert.crt
		ssl_protocols TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";         
    server_name 172.16.7.1;
		index index.html index.htm index.php;
		root /usr/local/webserver/nginx/html;
		#charset koi8-r;
		add_header X-Frame-Options "DENY";

		#access_log  logs/host.access.log  main;
		location /site/1/ {

			proxy_pass http://172.16.1.1/;
			#proxy_redirect default;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_set_header X-real-ip $remote_addr;
			proxy_set_header X-Forwarded-For $remote_addr;
			#proxy_http_version 1.1;
			#proxy_set_header Upgrade $http_upgrade;
			#proxy_set_header Connection "upgrade";
			#proxy_set_header Host $host;

		}
		location /site/2/ {

			proxy_pass http://172.16.1.2/;
			#proxy_redirect default;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_set_header X-real-ip $remote_addr;
			proxy_set_header X-Forwarded-For $remote_addr;
			#proxy_http_version 1.1;
			#proxy_set_header Upgrade $http_upgrade;
			#proxy_set_header Connection "upgrade";
			#proxy_set_header Host $host;

		}
		location /res/s {

			proxy_pass http://172.16.0.1:8800/;
			proxy_redirect default;
		}
		location /res/d {

			proxy_pass http://172.16.0.101:8801/;
			proxy_redirect default;
		}
		#location / {
		#    root   html;
		#    index  index.html index.htm;
		#}

		#location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|ico)$
		#{
		#  expires 30d;
		## access_log off;
		#}

		location ~ .*\.(php|php5)?$ {

			#fastcgi_pass unix:/tmp/php-cgi.sock;
			fastcgi_pass 127.0.0.1:9000;
			fastcgi_index index.php;
			include fastcgi.conf;
		}
		#location ~ .*\.(js|css)?$
		#{
		#	alias http://172.16.1.1/bps-app-web/;
		#  expires 15d;
		## access_log off;
		#}
		#error_page  404              /404.html;

		# redirect server error pages to the static page /50x.html
		#
		error_page 500 502 503 504 /50x.html;
		location = /50x.html {

			root html;
		}

		# proxy the PHP scripts to Apache listening on 127.0.0.1:80
		#
		#location ~ \.php$ {
		#    proxy_pass   http://127.0.0.1;
		#}

		# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
		#
		#location ~ \.php$ {
		#    root           html;
		#    fastcgi_pass   127.0.0.1:9000;
		#    fastcgi_index  index.php;
		#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
		#    include        fastcgi_params;
		#}
		# deny access to .htaccess files, if Apache's document root
		# concurs with nginx's one
		#
		#location ~ /\.ht {
		#    deny  all;
		#}
	}


	# another virtual host using mix of IP-, name-, and port-based configuration
	#
	#server {
	#    listen       8000;
	#    listen       somename:8080;
	#    server_name  somename  alias  another.alias;
	#    location / {
	#        root   html;
	#        index  index.html index.htm;
	#    }
	#}
	# HTTPS server
	#server {
	#    listen       9292;
	#    server_name  172.16.7.1;
	#    location / {
	#        proxy_pass http://172.16.1.1:9292/;
	#	proxy_http_version 1.1;
	#	proxy_set_header Upgrade $http_upgrade;
	#	proxy_set_header Connection "upgrade";
	#
	#     }
	# }
	server {
    server_tokens off;
		listen 9292;
		ssl on;
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m; 
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4"; 
    ssl_certificate /usr/local/webserver/nginx/cert.crt;
		ssl_certificate_key /usr/local/webserver/nginx/cert.key;
		server_name 172.16.7.1;
		add_header X-Frame-Options "DENY";

		location /site/1/ {

			proxy_pass http://172.16.1.1:9292/;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_set_header X-real-ip $remote_addr;
			proxy_set_header X-Forwarded-For $remote_addr;
		}
		location /site/2/ {

			proxy_pass http://172.16.1.2:9292/;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_set_header X-real-ip $remote_addr;
			proxy_set_header X-Forwarded-For $remote_addr;
		}

	}
	server {
		listen 80;
		server_name 172.16.7.1;
		index index.html index.htm index.php;
		root /usr/local/webserver/nginx/html;
		#charset koi8-r;
		add_header X-Frame-Options "DENY";
		location /v2/ {

			proxy_pass http://openapi.xg.qq.com/v2/;
			proxy_redirect default;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_set_header X-real-ip $remote_addr;
			proxy_set_header X-Forwarded-For $remote_addr;
			#proxy_http_version 1.1;
			#proxy_set_header Upgrade $http_upgrade;
			#proxy_set_header Connection "upgrade";
			#proxy_set_header Host $host;

		}
	}


	# HTTPS server
	#
	#server {
	#    listen       443 ssl;
	#    server_name  localhost;
	#    ssl_certificate      cert.pem;
	#    ssl_certificate_key  cert.key;
	#    ssl_session_cache    shared:SSL:1m;
	#    ssl_session_timeout  5m;
	#    ssl_ciphers  HIGH:!aNULL:!MD5;
	#    ssl_prefer_server_ciphers  on;
	#    location / {
	#        root   html;
	#        index  index.html index.htm;
	#    }
	#}
}
